networks:
  transcendence:
    driver: bridge 

services:
  nginx:
    image: nginx
    container_name: nginx
    build:
      context: nginx
      dockerfile: Dockerfile
    ports:
      - "8443:8443"
      - "8980:8980"
    volumes:
      - ./frontend:/usr/share/nginx/html
      - media_volume:/usr/share/nginx/html/media
      - ./logs/nginx:/logs/nginx   # Mount logs directory for ELK
    depends_on:
      - web
    networks:
      - transcendence

  db:
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      - transcendence
  
  web:
    build:
      context: ./back
      dockerfile: Dockerfile
    restart: always
    volumes:
      - ./back:/back
      - media_volume:/back/transcendence/media
      - ./logs/django:/logs/django   # Mount logs directory for ELK
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
    networks:
      - transcendence

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - transcendence
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
    networks:
      - transcendence

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_SECURITY_DISABLE_INITIAL_ADMIN_CHANGE=true
    networks:
      - transcendence
    volumes:
      - ./grafana/dashboards:/var/lib/grafana/dashboards/
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
      - db

  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    restart: always
    ports:
      - "9100:9100"
    networks:
      - transcendence

  postgres_exporter:
    image: wrouesnel/postgres_exporter:latest
    container_name: postgres_exporter
    restart: always
    environment:
      - DATA_SOURCE_NAME=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable
    ports:
      - "9187:9187"
    networks:
      - transcendence
    depends_on:
      - db

  #elasticsearch:
  #  image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
  #  container_name: elasticsearch
  #  environment:
  #    - discovery.type=single-node  # This is required for single-node setups
  #    - ELASTIC_PASSWORD=testpass #${ELASTIC_PASSWORD}  # Set your Elasticsearch password
  #  volumes:
  #    - esdata:/usr/share/elasticsearch/data  # Persistent volume for Elasticsearch data
  #  ports:
  #    - "9200:9200"  # Expose the port for accessing Elasticsearch's API
  #  networks:
  #    - transcendence

  #logstash:
  #  image: docker.elastic.co/logstash/logstash:7.10.0
  #  container_name: logstash
  #  environment:
  #    - LOGSTASH_PASSWORD=testpass  # Set password for Logstash if needed
  #  volumes:
  #    - ./logstash/config:/usr/share/logstash/config  # Mount config files (including pipelines.yml)
  #    - ./logstash/pipeline:/usr/share/logstash/pipeline  # Mount pipeline configuration files (like logstash.conf)
  #  ports:
  #    - "5044:5044"  # Default port for Logstash input (Beats)
  #  networks:
  #    - transcendence
  #  depends_on:
  #    - elasticsearch
  #kibana:
  #  image: docker.elastic.co/kibana/kibana:7.10.0
  #  container_name: kibana
  #  environment:
  #    - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
  #    - ELASTICSEARCH_PASSWORD=testpass #${ELASTIC_PASSWORD}
  #  ports:
  #    - "5601:5601"  # Expose Kibana's web interface
  #  networks:
  #    - transcendence
  #  depends_on:
  #    - elasticsearch
    
  #filebeat:
  #  image: docker.elastic.co/beats/filebeat:7.10.0
  #  container_name: filebeat
  #  volumes:
  #    - ./filebeat/filebeat.yml:/etc/filebeat/filebeat.yml  # Mount custom Filebeat configuration
  #    - ./path/to/logs:/path/to/your/logs  # Mount logs directory
  #  networks:
  #    - transcendence
  #  depends_on:
  #    - logstash

volumes:
  media_volume:
  esdata:
    driver: local

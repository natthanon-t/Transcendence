
networks:
  transcendence:
    driver: bridge 

services:
  nginx:
    image: nginx
    container_name: nginx
    build:
      context: nginx
      dockerfile: Dockerfile
    ports:
      - "443:443"
    volumes:
      - ./frontend:/usr/share/nginx/html
      - media_volume:/usr/share/nginx/html/media
    depends_on:
      - web
    networks:
      - transcendence

  db:
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      - transcendence
  
  web:
    build:
      context: ./back
      dockerfile: Dockerfile
    restart: always
    volumes:
      - ./back:/back
      - media_volume:/back/transcendence/media
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
    networks:
      - transcendence

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - transcendence
  
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml 
    networks:
      - transcendence

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_SECURITY_DISABLE_INITIAL_ADMIN_CHANGE=true
    networks:
      - transcendence
    volumes:
      - ./grafana/dashboards:/var/lib/grafana/dashboards/
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
      - db

  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    restart: always
    ports:
      - "9100:9100"
    networks:
      - transcendence

  postgres_exporter:
    image: wrouesnel/postgres_exporter:latest
    container_name: postgres_exporter
    restart: always
    environment:
      - DATA_SOURCE_NAME=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable
    ports:
      - "9187:9187"
    networks:
      - transcendence
    depends_on:
      - db

volumes:
  media_volume: